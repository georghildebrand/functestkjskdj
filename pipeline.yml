trigger:
  - master
  - dev-*

variables:

  functionAppName: '$(FUNCTION_APP_NAME)'
  azureSubscription: '$(SERVICE_CONNECTION_NAME)'
  storageName: '$(FUCTION_APP_STORAGE_ACCOUNT_NAME)'
  resourceGroupName: '$(FUNCTION_APP_RESOURCE_GROUP_NAME)'

pool:
  vmImage: ubuntu-18.04
steps:
- task: UsePythonVersion@0
  displayName: "Setting python version to 3.6 as required by functions"
  inputs:
    versionSpec: '3.6' # Change Python version if necessary
    architecture: 'x64'
- script: |
    # dotnet restore # COMMENT OUT IF NOT USING FUNCTION EXTENSIONS
    # dotnet build --output './bin/' # COMMENT OUT IF NOT USING FUNCTION EXTENSIONS
    #source $(workingDirectory)/worker_venv/bin/activate
    #pip install -r requirements.txt
    #worker_venv/lib/python3.6/site-packages
    #pip install --target="$(workingDirectory)/.python_packages/lib/site-packages" -r requirements.txt
    pip install --target="worker_venv/lib/python3.6/site-packages" -r requirements.txt

- task: ArchiveFiles@2
  displayName: "Archive files"
  inputs:
    rootFolderOrFile: "$(System.DefaultWorkingDirectory)"
    includeRootFolder: false
    archiveFile: "$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip"
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
- task: AzureFunctionApp@1
  displayName: "Azure functions app deploy"
  inputs:
    # todo: make service connection dynamic for alpha,beta,ga
    azureSubscription: $(azureSubscription) # here the subscription or service connection name
    appType: functionAppLinux
    appName: $(functionAppName)
    packageForLinux: '$(Build.ArtifactStagingDirectory)/*.zip'
